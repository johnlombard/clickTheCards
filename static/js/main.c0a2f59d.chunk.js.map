{"version":3,"sources":["components/Navbar/Navbar.js","components/Jumbotron/Jumbotron.js","components/Game/Card/Card.js","components/Game/Game.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","onClick","handleIncrement","concat","Guess","CurrentScore","Jumbotron","Card","src","image","alt","name","id","Game","children","App","state","Covers","HighScore","Clicked","_this","indexOf","console","log","setState","shuffle","arr","sort","Math","random","_this2","this","components_Navbar_Navbar","components_Jumbotron_Jumbotron","components_Game_Game","map","Cover","Game_Card_Card","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"8OAceA,SAVA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAASC,QAASL,EAAMM,iBAAtC,sBACAL,EAAAC,EAAAC,cAAA,cAAAI,OAASP,EAAMQ,MAAf,MACAP,EAAAC,EAAAC,cAAA,yBAAAI,OAAoBP,EAAMS,aAA1B,UCGSC,EATG,kBAChBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,mICKWQ,SAPF,SAAAX,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKS,IAAKZ,EAAMa,MAAOC,IAAKd,EAAMe,KAAMV,QAAS,kBAAKL,EAAMM,gBAAgBN,EAAMgB,UCDvEC,EAFF,SAAAjB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQJ,EAAMkB,mBCmE3DC,6MA9DjBC,MAAQ,CACNC,SACAZ,aAAc,EACda,UAAW,EACXC,QAAS,GACTf,MAAO,MAGTF,gBAAkB,SAACU,IAIuB,IAApCQ,EAAKJ,MAAMG,QAAQE,QAAQT,IAC7BU,QAAQC,IAAIH,EAAKJ,MAAMZ,OACvBgB,EAAKI,SAAS,CAAEnB,aAAce,EAAKJ,MAAMX,aAAe,EAAIc,QAASC,EAAKJ,MAAMG,QAAQhB,OAAOS,GAAKR,MAAO,kBAG3GkB,QAAQC,IAAIH,EAAKJ,MAAMZ,OACvBgB,EAAKI,SAAS,CAAEnB,aAAc,EAC5BD,MAAO,gBACPe,QAAS,SAKfM,QAAU,SAACC,GACT,OAAOA,EAAIC,KAAK,kBAAMC,KAAKC,SAAW,8EAG/B,IAAAC,EAAAC,KAEP,OAEElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiC,EAAD,CAEE5B,MAAQ2B,KAAKf,MAAMZ,MACnBC,aAAc0B,KAAKf,MAAMX,eAC3BR,EAAAC,EAAAC,cAACkC,EAAD,MAEApC,EAAAC,EAAAC,cAACmC,EAAD,KACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAIZ+B,KAAKN,QAASM,KAAKf,MAAMC,QAAQkB,IAAI,SAAAC,GAAK,OACvCvC,EAAAC,EAAAC,cAACsC,EAAD,CACE5B,MAAO2B,EAAM3B,MACbG,GAAIwB,EAAMxB,GACVV,gBAAiB4B,EAAK5B,8BAlDtBoC,aCFlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c0a2f59d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navbar.css\";\n\n\nconst Navbar = props => (\n  <nav className=\"navbar \">\n    <ul>\n      <li className=\"brand\"  onClick={props.handleIncrement}>John's Book Shelf!</li>\n      <li>{` ${props.Guess} `}</li>\n      <li>{`Books Read: ${props.CurrentScore} `}</li>\n    </ul>\n  </nav>\n);\n\nexport default Navbar;","import React from \"react\";\n\n\nconst Jumbotron = () => (\n  <div className=\"jumbotron\">\n    <h1>Your Project</h1>\n    <p>\n      Click to read one of my favorite books. If you read the same book twice, you'll have to restart! Try to read all 15.\n    </p>\n  </div>\n);\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./Card.css\";\n\n\nconst Card = props => (\n  <div className=\"cover\">\n    <img src={props.image} alt={props.name} onClick={()=> props.handleIncrement(props.id)} />\n    \n  </div>\n);\n\nexport default Card;\n\n\n","import React from \"react\";\n\n\nconst Game = props => <div className=\"container\"><div className=\"game\">{props.children}</div></div>;\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport Jumbotron from './components/Jumbotron';\nimport Card from './components/Game/Card';\nimport Game from './components/Game';\nimport Covers from \"./Covers.json\";\n\nclass App extends Component {\n  state = {\n    Covers,\n    CurrentScore: 0,\n    HighScore: 0,\n    Clicked: [],\n    Guess: \"\"\n  };\n  \n  handleIncrement = (id) => {\n    // We always use the setState method to update a component's state\n\n    // If the card has not been clicked at one to the score and set the state of the image to\n    if (this.state.Clicked.indexOf(id) === -1 ) {\n      console.log(this.state.Guess);\n      this.setState({ CurrentScore: this.state.CurrentScore + 1,  Clicked: this.state.Clicked.concat(id), Guess: \"Great Book!\"   });\n    } else {\n      // IF the card has been clicked reset the score\n      console.log(this.state.Guess);\n      this.setState({ CurrentScore: 0,\n        Guess: \"Already Read!\", \n        Clicked: [],\n      });\n    }\n  };\n\n  shuffle = (arr) => {\n    return arr.sort(() => Math.random() - 0.5);\n  };\n\n  render() {\n\n    return (\n\n      <div className=\"App\">\n        <Navbar\n          // Sets the current score to the states score\n          Guess ={this.state.Guess}\n          CurrentScore={this.state.CurrentScore} />\n        <Jumbotron />\n\n        <Game>\n          <div className=\"row\">\n\n            {/* Maps Through all of the cards to add click event and the background image */}\n\n            {this.shuffle (this.state.Covers).map(Cover => (\n                <Card\n                  image={Cover.image}\n                  id={Cover.id}\n                  handleIncrement={this.handleIncrement}\n                />\n              ))\n            }\n          </div>\n  \n        </Game>\n\n      </div>\n        );\n      }\n    }\n    \n    export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}